server.port=${PORT:2019}

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false


#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=none
spring.datasource.initialization-mode=never

# For h2 database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


# For PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/dbstarthere
#spring.datasource.username=postgres
#spring.datasource.password=${MYDBPASSWORD}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#postgresql heroku
spring.datasource.url=${SPRING_DATA_URL:jdbc:postgresql://ec2-54-221-212-126.compute-1.amazonaws.com:5432/d7kopjuuohanpt?user=edgvpkkkknltuc&password=0cd92d87341a43822b06bca34e5011d310d742658809a965dab9a04146e9e005&sslmode=require}
spring.datasource.username=edgvpkkkknltuc
spring.datasource.password=0cd92d87341a43822b06bca34e5011d310d742658809a965dab9a04146e9e005
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#end postgresqul heroku configuration

